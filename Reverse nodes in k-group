class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(k<=1 || head==null){
            return head;
        }
        ListNode prev=null;
        ListNode curr=head;
        int length=getlength(head);
        int count=length/k;
        while(count>0){
            ListNode last=prev;
            ListNode newend=curr;
            for(int i=0; curr!=null && i<k; i++){
                ListNode next=curr.next;
                curr.next=prev;
                prev=curr;
                curr=next;
                while(next!=null){
                    next=next.next;
                }
            }
            if(last!=null){
                last.next=prev;
            }
            else{
                head=prev;
            }
            newend.next=curr;
            prev=newend;
            count--;
        }
        return head;
    }
    public int getlength(ListNode head){
        ListNode node=head;
        int length=0;
        while(node!=null){
            length++;
            node=node.next;
        }
        return length;
    }
}
